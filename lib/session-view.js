// Generated by CoffeeScript 1.10.0
(function() {
  var SessionView, View,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  View = require('atom-space-pen-views').View;

  module.exports = SessionView = (function(superClass) {
    extend(SessionView, superClass);

    function SessionView() {
      return SessionView.__super__.constructor.apply(this, arguments);
    }

    SessionView.prototype.initialize = function() {
      return this.on('click', (function(_this) {
        return function() {
          return atom.clipboard.write(_this.session);
        };
      })(this));
    };

    SessionView.content = function() {
      return this.div({
        "class": 'motepair session-id inline-block',
        outlet: 'sessionId'
      }, (function(_this) {
        return function() {
          _this.span('Session ID: ');
          return _this.span({
            "class": 'id',
            outlet: 'id'
          });
        };
      })(this));
    };

    SessionView.prototype.show = function(session) {
      var statusBar;
      this.session = session;
      this.id.text(session);
      statusBar = document.querySelector('status-bar');
      return statusBar.addLeftTile({
        item: this
      });
    };

    SessionView.prototype.hide = function() {
      return this.detach();
    };

    return SessionView;

  })(View);

}).call(this);
