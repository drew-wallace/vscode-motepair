// Generated by CoffeeScript 1.10.0
(function() {
  var VSCodeShare, shareVSCodeEditor;

  shareVSCodeEditor = require('./vscode_attacher');

  VSCodeShare = (function() {
    function VSCodeShare(ws) {
      this.ws = ws;
      this.packageVersion = require('../package.json').version;
      this.subscriptions = new CompositeDisposable;
      this.sharejs = require('./share').client;
      this.sjs = new this.sharejs.Connection(this.ws);
    }

    VSCodeShare.prototype.start = function(sessionId) {
      this.ws.send(JSON.stringify({
        a: 'meta',
        type: 'init',
        sessionId: sessionId,
        vscodeVersion: vscode.version,
        motepairVersion: this.packageVersion
      }));
      return vscode.window.onDidChangeActiveTextEditor((function(_this) {
        return function(TextEditor) {
          var doc, relativePath;
          relativePath = vscode.workspace.asRelativePath(TextEditor.document.uri);
          doc = _this.sjs.get('editors', sessionId + ":" + relativePath);
          return _this.setupDoc(doc, TextEditor);
        };
      })(this));
    };

    VSCodeShare.prototype.setupDoc = function(doc, TextEditor) {
      doc.subscribe();
      return doc.whenReady(function() {
        var ctx;
        if (doc.type == null) {
          doc.create('text');
        }
        if (doc.type && doc.type.name === 'text') {
          if (typeof ctx === "undefined" || ctx === null) {
            ctx = doc.createContext();
          }
          return shareVSCodeEditor(TextEditor, ctx);
        }
      });
    };

    return VSCodeShare;

  })();

  module.exports = VSCodeShare;

}).call(this);
