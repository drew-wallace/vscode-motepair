// Generated by CoffeeScript 1.10.0
(function() {
  var NewSessionView, TextEditorView, View, crypto, ref,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require('atom-space-pen-views'), View = ref.View, TextEditorView = ref.TextEditorView;

  crypto = require('crypto');

  module.exports = NewSessionView = (function(superClass) {
    extend(NewSessionView, superClass);

    function NewSessionView() {
      return NewSessionView.__super__.constructor.apply(this, arguments);
    }

    NewSessionView.prototype.initialize = function() {
      this.miniEditor.setText(crypto.randomBytes(8).toString('hex'));
      this.miniEditor.focus();
      atom.commands.add('.new-session-view', {
        'core:confirm': (function(_this) {
          return function() {
            return _this.detach();
          };
        })(this)
      });
      return atom.commands.add('.new-session-view', {
        'core:cancel': (function(_this) {
          return function() {
            return _this.detach();
          };
        })(this)
      });
    };

    NewSessionView.content = function() {
      return this.div({
        "class": 'new-session-view overlay from-top mini'
      }, (function(_this) {
        return function() {
          _this.p('Session ID');
          _this.subview('miniEditor', new TextEditorView({
            mini: true
          }));
          return _this.div('Enter a string to identify this share session');
        };
      })(this));
    };

    NewSessionView.prototype.show = function() {
      var workspaceView;
      workspaceView = atom.views.getView(atom.workspace);
      workspaceView.appendChild(this[0]);
      return this.miniEditor.focus();
    };

    return NewSessionView;

  })(View);

}).call(this);
