// Generated by CoffeeScript 1.10.0
(function() {
  var AtomShare, CompositeDisposable, shareAtomEditor;

  CompositeDisposable = require('atom').CompositeDisposable;

  shareAtomEditor = require('./atom_attacher');

  AtomShare = (function() {
    function AtomShare(ws) {
      this.ws = ws;
      this.packageVersion = require('../package.json').version;
      this.subscriptions = new CompositeDisposable;
      this.sharejs = require('./share').client;
      this.sjs = new this.sharejs.Connection(this.ws);
    }

    AtomShare.prototype.start = function(sessionId) {
      this.ws.send(JSON.stringify({
        a: 'meta',
        type: 'init',
        sessionId: sessionId,
        atomVersion: atom.getVersion(),
        motepairVersion: this.packageVersion
      }));
      return this.subscriptions.add(atom.workspace.observeTextEditors((function(_this) {
        return function(editor) {
          var doc, relativePath;
          relativePath = atom.project.relativize(editor.getPath());
          doc = _this.sjs.get('editors', sessionId + ":" + relativePath);
          return _this.setupDoc(doc, editor);
        };
      })(this)));
    };

    AtomShare.prototype.setupDoc = function(doc, editor) {
      doc.subscribe();
      return doc.whenReady(function() {
        var ctx;
        if (doc.type == null) {
          doc.create('text');
        }
        if (doc.type && doc.type.name === 'text') {
          if (typeof ctx === "undefined" || ctx === null) {
            ctx = doc.createContext();
          }
          return shareAtomEditor(editor, ctx);
        }
      });
    };

    return AtomShare;

  })();

  module.exports = AtomShare;

}).call(this);
